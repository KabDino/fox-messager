{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","c","dialog","src","style","to","name","Message","message","maxLength10","maxLengthCreator","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","key","messagesElements","messagesData","m","AddReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogs","dialogsItems","values","sendMessage","newMessageBody","messages","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,+FCc/HC,EAXI,SAAAC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,yBAAKC,UAAWC,IAAEC,QAChB,yBAAKC,IAAI,mFAAmFC,MAAO,CAAC,MAAS,OAAQ,OAAU,OAAQ,aAAgB,UACvJ,kBAAC,IAAD,CAASC,GAAIP,GAAOD,EAAMS,QCHjBC,EAJC,SAAAV,GACd,OAAO,yBAAKG,UAAWC,IAAEO,SAAUX,EAAMW,U,iCCIrCC,EAAcC,YAAiB,IA2CtBC,EAzCC,SAACd,GACf,IAAIe,EAAQf,EAAMgB,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAACd,GAAD,OAC1C,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMW,IAAKf,EAAOH,GAAIA,GAAIG,EAAOH,QAGxDmB,EAAmBN,EAAMO,aAAaH,KAAI,SAACI,GAAD,OAC5C,kBAAC,EAAD,CAASZ,QAASY,EAAEZ,QAASS,IAAKG,EAAErB,QAqBhCsB,EAAsBC,YAAU,CAAEC,KAAM,kBAAlBD,EAdL,SAACzB,GACtB,OACE,0BAAM2B,SAAU3B,EAAM4B,cACpB,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXtB,KAAK,iBACLuB,YAAY,qBACZC,SAAU,CAACC,IAAUtB,KAEvB,oDASN,OACE,yBAAKT,UAAWC,IAAE+B,SAChB,yBAAKhC,UAAWC,IAAEgC,cAAenB,GACjC,kBAACO,EAAD,CAAqBG,SAzBH,SAACU,GACrBrC,EAAMsC,YAAYD,EAAOE,mBAyBvB,yBAAKpC,UAAWC,IAAEoC,UAAWnB,K,+CC3C/BoB,EAA6B,SAAC1B,GAAD,MAAY,CAC3C2B,OAAQ3B,EAAM4B,KAAKD,S,OCoBNE,sBACbC,aAnBoB,SAAC9B,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAAC8B,GACxB,MAAO,CACLR,YAAa,SAACC,GACZO,EAASC,YAAmBR,UDRF,SAACS,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAKlD,MAAM0C,OAGT,kBAACM,EAAcE,KAAKlD,OAFlB,kBAAC,IAAD,CAAUQ,GAAG,eAJmB,GACb2C,IAAMH,WAatC,OAJqCH,YAAQJ,EAARI,CACnCI,KCMWL,CAGb9B","file":"static/js/5.2d0fd78a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2yf5c\",\"dialogsItems\":\"Dialogs_dialogsItems__2vDdG\",\"active\":\"Dialogs_active__3W5C0\",\"messages\":\"Dialogs_messages__1ZA3a\"};","import React from 'react';\r\nimport c from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = props => {\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={c.dialog}>\r\n      <img src=\"https://techcrunch.com/wp-content/uploads/2019/09/DC-7_resized.jpeg?w=730&crop=1\" style={{'width': '40px', 'height': '40px', 'borderRadius': '100%'}}></img>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport c from '../Dialogs.module.css';\r\n\r\nconst Message = props => {\r\n  return <div className={c.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport c from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogsData.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messagesData.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  const AddMessageForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n        <button>Send message</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const AddReduxMessageForm = reduxForm({ form: 'AddMessageForm' })(\r\n    AddMessageForm\r\n  );\r\n\r\n  return (\r\n    <div className={c.dialogs}>\r\n      <div className={c.dialogsItems}>{dialogsElements}</div>\r\n      <AddReduxMessageForm onSubmit={addNewMessage} />\r\n      <div className={c.messages}>{messagesElements}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n\r\n    // updateNewMessageBody: (body) => {\r\n    //   dispatch(updateNewMessageBodyCreator(body));\r\n    // },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}